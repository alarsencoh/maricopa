{% macro dnm_filter(family, vcf, filtered_vcf, tool) %}

{% set ped_file %}{{ family.gltype }}/joint_variant_calling/{{ family.name }}.ped{% endset %}
{% set source_pipeline, source_version = primaryPipeline.split('@') %}

- name: bcftools_filter_{{ tool }}
  input: 
    - {{ vcf }}
    - {{ ped_file }}
  output: {{ filtered_vcf }}
  container: {{ constants.tools.bcftools.container }}
  digest:  {{ constants.tools.bcftools.digest }}
  cmd: |
    set -euo pipefail

    bcftools +trio-dnm -P {{ ped_file }} {{ vcf }} | \
      bcftools view \
        -T ^{{ constants.maricopa[source_pipeline].denylist }} - | \
      bcftools view \
        -i '(FMT/GT[0]="ref" && FMT/GT[1]="ref") && (FMT/GT[2]="het" & FMT/VAF[2]>30 & FMT/VAF[2]<70)' - | \
      bcftools view \
        -e 'FMT/DP[2]>98 || FMT/DP<=20 || FMT/AD[0-1:1]>1' -O z -o {{ filtered_vcf }} - 

{% endmacro %}