{% from 'modules/qc/somalier.jst' import somalier with context %}
{% from 'modules/joint_variant_calling/bcftools_filter.jst' import dnm_filter with context %}
{% from 'modules/annotation/main.jst' import annotate_vcfs with context %}

{% macro glnexus(family, config_type, input_type) %}

{% set temp_dir %}temp/{{ family.gltype }}/joint_variant_calling/glnexus/{{ config_type }}/{{ family.name }}{% endset %}
{% set results_dir %}{{ family.gltype }}/joint_variant_calling/glnexus/{{ config_type }}/{{ family.name }}{% endset %}
{% set output_vcf %}{{ results_dir }}/{{ family.name }}.bcf{% endset %}

- name: glnexus_{{ family.name }}_{{ config_type }}
  input:
    {% for member in family.members %}
    - {{ temp_dir }}/{{ member[input_type] | basename }}
    {% endfor %}
  output: {{ output_vcf }}
  tags: [glnexus, joint_variant_calling, ]
  cpus: 8
  mem: 40G
  walltime: "3-00:00:00"
  container: {{ constants.tools.glnexus.container }}
  digest: {{ constants.tools.glnexus.digest }}
  cmd: |
    set -euo pipefail

    mkdir -p {{ results_dir }}

    rm -r {{ temp_dir }}/{{ family.name }}_glnexus_db &>/dev/null || true
    rm {{ temp_dir }}/{{ family.name }}_gvcf_list.txt || true

    {% for member in family.members %}
    echo {{ temp_dir }}/{{ member[input_type] | basename }} >> {{ temp_dir }}/{{ family.name }}_gvcf_list.txt
    {% endfor %}

    rm -r {{ temp_dir }}/{{ family.name }}_glnexus_db &>/dev/null || true
    
    glnexus_cli \
      --threads 8 \
      --mem-gbytes 40 \
      --dir {{ temp_dir }}/{{ family.name }}_glnexus_db \
      --config {{ config_type }} \
      --list {{ temp_dir }}/{{ family.name }}_gvcf_list.txt \
      > {{ output_vcf }}

    bcftools index {{ output_vcf }}

{% if tasks.joint_variant_calling_somalier | default(true) %}
  {{- somalier(family, config_type, output_vcf) }}
{% endif %}

{% if tasks.joint_variant_calling_bcftools_filter | default(true) %}
  {% set filtered_vcf %}{{ results_dir }}/{{ family.name }}.glnexus.filtered.bcf{% endset %}
  {{- dnm_filter(family, output_vcf, filtered_vcf, 'glnexus') }}
{% endif %}

{{- annotate_vcfs(family, temp_dir, results_dir, output_vcf, 'glnexus') }}

{% endmacro %}
